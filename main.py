#!/usr/bin/python3

#Author: Maël Chouteau
from bs4 import BeautifulSoup
import requests
import sys
import re
import datetime
from httplib2 import Http
import os
import argparse
import mysql.connector
#Editez les champs ci-dessous:
SERVER = "localhost"
USER = ""
PASSWORD = ""
DATABASE = ""

mydb = mysql.connector.connect(host=SERVER, user=USER,password=PASSWORD, database=DATABASE)
cursor = mydb.cursor() # to access field as dictionary use cursor(as_dict=True)

LOGIN=""
PASS=""
Elevesclasse = []

def main(argv):
    data, session = getInputs("https://esaip.alcuin.com/OpDotNet/Noyau/Login.aspx")
    session = loginAlcuin("https://esaip.alcuin.com/OpDotNet/Noyau/Login.aspx", data, session)  #Connexion successful
    parser = argparse.ArgumentParser(description="Récupérer toutes les notes de ceux que l'on souhaite")
    parser.add_argument('-o', '--output', help="Fichier de log")
    parser.add_argument("function", nargs="?", choices=['Notes', 'Matiere', 'Noms'], default='Notes')
    args, sub_args = parser.parse_known_args()  
    if args.function == "Notes":
        print("[*] Extraction des données et remplissage du tableau Notes")
        retrieveNotes(session)
    elif args.function == "Matiere":
        print("[*] Extraction des données et remplissage du tableau Matiere")
        retrieveMatiere(session)
    elif args.function == "Noms":
        parser.add_argument('-debut','--debut', help="ID from wich we synchronize the table Noms.")
        parser.add_argument('-fin', '--fin', help="Last ID of the range from wich we synchronize the table Noms.")
        args = parser.parse_args(sub_args)
        print("[*] Extraction des données et création du tableau")
        IDtoNom(session,int(args.debut),int(args.fin))

    if args.output:
       sys.stdout = open(args.output, 'w+')

def getInputs(url): #Get the inputs to send back to the login page (Tokens etc)
    s = requests.Session()
    r = s.get(url)

    soup = BeautifulSoup(r.text, "html.parser")
    inputs = soup.find_all("input")

    data={}
    for i in inputs:    #Extract inputs and store them in data
        try:
            data[i["name"]]=i["value"]
        except:
            pass
    return(data, s)

def loginAlcuin(url,data,s):    #login
    data["UcAuthentification1$UcLogin1$txtLogin"] = LOGIN
    data["UcAuthentification1$UcLogin1$txtPassword"] = PASS
    try:
        s.post(url, data=data)
    except:
        sys.exit()
    return(s)

def retrieveNotes(s):
    r = s.get('https://esaip.alcuin.com/OpDotNet/Context/context.jsx')  #Get user ID to show the right calendar
    usrId = re.search('\w+[0-9]', r.text).group(0)  #Regex to extract user ID
    s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Accueil.aspx?IdApplication=142&TypeAcces=MaFiche&IdLien=6816') #Necessary GET request required for the next GET(Otherwise you get denied)
    GObjet = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Navigation/Dossier/Dossier.aspx').text # In the reply of this request we can extract the GObjet ID that change every time you click on the "Ma fiche" panel on the left
    GObjet = GObjet[GObjet.index('GObjet=')+len('GObjet='):GObjet.index('&IdObjet')] # Extracting the GObjet ID for the next requests
    g = s.get('https://esaip.alcuin.com/OpDotNet/Noyau/Utils/LaunchAppli.aspx?IdApplication=142&TypeAcces=MaFiche&groupe=&TypeAppli=0&url=%2fOpDotNet%2fEplug%2fFPC%2fProcess%2fAnnuaire%2fParcours%2fParcours.aspx%3fGObjet%3d'+GObjet+'%26IdObjet%3d'+usrId+'%26IdTypeObjet%3d26%26intIdUtilisateur%3d'+usrId+'%26IdOnglet%3d178%26IdAnnDos%3d6449') # This gives us the session ID to use in the next post(It's the GET generated after clicking on "Parcour" tab)
    soup = BeautifulSoup(g.text, "html.parser")
    IdSession = soup.find(attrs={"name": "IdSession"} )
    data = {'dUser' : usrId, 'IdCommunity' : '561', 'Idgroupe' : '', 'groupe' : '', 'IdSession' : IdSession['value'], 'IdApplication' : '142', 'TypeAcces' : 'MaFiche', 'TypeApplication' : '0'}# data needed for the post request
    s.post('https://esaip.alcuin.com/OpDotNet/Eplug/FPC/Process/Annuaire/Parcours/Parcours.aspx?GObjet='+GObjet+'&IdObjet='+usrId+'&IdTypeObjet=26&intIdUtilisateur='+usrId+'&IdOnglet=178&IdAnnDos=6449 ', data=data)# Post generated by the GET above
    for IDeleve in Elevesclasse:
        IDeleve = str(IDeleve)
        notestab = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/FPC/Process/Annuaire/Parcours/pDetailParcours.aspx?idProcess=31294&idUser='+IDeleve+'&idIns=439755&idProcessUC=-1&typeRef=module').text#The final GET request when you click on your the current year, some parameters like idIns will probably need to be modified
        notestabsoup = BeautifulSoup(notestab, "html.parser")# Preparing the Reply with beautifulSoup
        tableau = notestabsoup.find_all("tr", {"class": "DataGridItem"})# Looking for all the lignes in the table
        for ligne in tableau: #Pour chaque lignes
            lignematiere = ligne.find_all("td", {"class": "DataGridColumn EncadrementPaveRL"})# Getting all the lines with that option(class=DataGridColumn EncadrementPaveRL) it corresponds to the courses only.
            if len(lignematiere) > 0:# if the ligne correspond to the class option above
                colval = ['']# Liste to store the value of each columns
                for val in lignematiere:#
                    colval.append(val.text.strip())#Adding to the list and deleting spaces befor and after the value (to be sure that we have real empty values and not just spaces)
                if len(colval[5]) != 0:#If there is a grade we can add it to the database
                    NomMatiere = colval[1]
                    sql = 'SELECT * FROM Note WHERE IDUser = %s AND NomMatiere = %s'
                    val = (IDeleve,colval[1])
                    cursor.execute(sql,val)# Checking the user ID and course ID to see if this value already exist, if so, we check if it changed to see if we have to update it or not.(a select is quicker than updating everything)
                    if len(cursor.fetchall()) != 1:#If the garde didn't exist before
                            sql = "INSERT INTO Note (IDUser, NomMatiere, Note ) VALUES (%s, %s, %s)"
                            val = (IDeleve, colval[1], colval[5].replace(",", "."))
                            cursor.execute(sql, val)
                            mydb.commit()
                    else:
                        sql = 'SELECT Note FROM Note WHERE IDUser = %s AND NomMatiere = %s'
                        val = (IDeleve,colval[1])
                        cursor.execute(sql,val)
                        if float(colval[5]) != float(cursor.fetchone()[0]):# If the garde is different than the one in the database
                            sql = "UPDATE Note set Note = %s WHERE IDUser = %s AND NomMatiere = %s"
                            val = (colval[5].replace(",", "."), IDeleve, colval[1])
                            cursor.execute(sql, val)
                            mydb.commit()

def calculs(m):
        cursor.execute('SET @rowindex := -1')
        cursor.execute('SELECT ROUND(AVG(n.Note),2) as Median FROM (SELECT @rowindex:=@rowindex + 1 AS rowindex, Note.Note AS Note FROM Note  WHERE NomMatiere = \"'+m+'\" ORDER BY Note.Note) AS n WHERE n.rowindex IN (FLOOR(@rowindex / 2), CEIL(@rowindex / 2))')
        Medianne = str(cursor.fetchone()[0])
        cursor.execute('SELECT ROUND(AVG(Note),2) From Note WHERE NomMatiere = \"'+m+'\"')
        Moyenne = str(cursor.fetchone()[0])
        cursor.execute('SELECT count(Note) From Note WHERE NomMatiere = \"'+m+'\" AND Note >= 10')
        MoreThanTen = str(cursor.fetchone()[0])
        cursor.execute('SELECT count(Note) From Note WHERE NomMatiere = \"'+m+'\" AND Note < 10')
        LessThanTen = str(cursor.fetchone()[0])
        cursor.execute('SELECT MIN(Note) From Note WHERE NomMatiere = \"'+m+'\"')
        NoteMin = str(cursor.fetchone()[0])
        cursor.execute('SELECT Max(Note) From Note WHERE NomMatiere = \"'+m+'\"')
        NoteMax = str(cursor.fetchone()[0])
        return(Medianne,Moyenne,MoreThanTen,LessThanTen,NoteMin,NoteMax)

def retrieveMatiere(s):
    r = s.get('https://esaip.alcuin.com/OpDotNet/Context/context.jsx')  #Get user ID to show the right calendar
    usrId = re.search('\w+[0-9]', r.text).group(0)  #Regex to extract user ID
    s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Accueil.aspx?IdApplication=142&TypeAcces=MaFiche&IdLien=6816') #Necessary GET request required for the next GET(Otherwise you get denied)
    GObjet = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Navigation/Dossier/Dossier.aspx').text # In the reply of this request we can extract the GObjet ID that change every time you click on the "Ma fiche" panel on the left
    GObjet = GObjet[GObjet.index('GObjet=')+len('GObjet='):GObjet.index('&IdObjet')] # Extracting the GObjet ID for the next requests
    g = s.get('https://esaip.alcuin.com/OpDotNet/Noyau/Utils/LaunchAppli.aspx?IdApplication=142&TypeAcces=MaFiche&groupe=&TypeAppli=0&url=%2fOpDotNet%2fEplug%2fFPC%2fProcess%2fAnnuaire%2fParcours%2fParcours.aspx%3fGObjet%3d'+GObjet+'%26IdObjet%3d'+usrId+'%26IdTypeObjet%3d26%26intIdUtilisateur%3d'+usrId+'%26IdOnglet%3d178%26IdAnnDos%3d6449') # This gives us the session ID to use in the next post(It's the GET generated after clicking on "Parcour" tab)
    soup = BeautifulSoup(g.text, "html.parser")
    IdSession = soup.find(attrs={"name": "IdSession"} )
    data = {'dUser' : usrId, 'IdCommunity' : '561', 'Idgroupe' : '', 'groupe' : '', 'IdSession' : IdSession['value'], 'IdApplication' : '142', 'TypeAcces' : 'MaFiche', 'TypeApplication' : '0'}# data needed for the post request
    s.post('https://esaip.alcuin.com/OpDotNet/Eplug/FPC/Process/Annuaire/Parcours/Parcours.aspx?GObjet='+GObjet+'&IdObjet='+usrId+'&IdTypeObjet=26&intIdUtilisateur='+usrId+'&IdOnglet=178&IdAnnDos=6449 ', data=data)# Post generated by the GET above
    notestab = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/FPC/Process/Annuaire/Parcours/pDetailParcours.aspx?idProcess=31294&idUser='+usrId+'&idIns=439755&idProcessUC=-1&typeRef=module').text#The final GET request when you click on your the current year, some parameters like idIns will probably need to be modified
    notestabsoup = BeautifulSoup(notestab, "html.parser")# Preparing the Reply with beautifulSoup
    tableau = notestabsoup.find_all("tr", {"class": "DataGridItem"})# Looking for all the lignes in the table
    for ligne in tableau: #Pour chaque lignes
        lignematiere = ligne.find_all("td", {"class": "DataGridColumn EncadrementPaveRL"})# Getting all the lines with that option(class=DataGridColumn EncadrementPaveRL) it corresponds to the courses only.
        if len(lignematiere) > 0:# if the ligne correspond to the class option above
            colval = ['']# Liste to store the value of each columns
            for val in lignematiere:#
                colval.append(val.text.strip())#Adding to the list and deleting spaces befor and after the value (to be sure that we have real empty values and not just spaces)
            sql = 'SELECT * FROM Matiere WHERE Nom = "'+colval[1]+'"'
            cursor.execute(sql)# Checking the course Name to see if this value already exist, if so, we can do nothing exept print for debug.(a select is quicker than updating everything)
            if len(cursor.fetchall()) != 1:
                sql = "INSERT INTO Matiere (Nom, Coeff ) VALUES (%s, %s)"
                val = (colval[1], colval[4].replace(",", "."))
                cursor.execute(sql, val)
                mydb.commit()        

def IDtoNom(s,debut,fin):
    for IDeleve in range(debut,fin):
        Nom = ""
        Prenom = ""
        sql = "SELECT * FROM Noms WHERE ID = '"+str(IDeleve)+"'"
        cursor.execute(sql)# We check to see if the ID is already in the database if so, we do nothing else we add it
        if len(cursor.fetchall()) != 1:
            s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Accueil.aspx?IdApplication=142&TypeAcces=MaFiche&IdLien=6816') #Necessary GET request required for the next GET(Otherwise you get denied)
            GObjet = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Navigation/Dossier/Dossier.aspx').text # In the reply of this request we can extract the GObjet ID that change every time you click on the "Ma fiche" panel on the left
            GObjet = GObjet[GObjet.index('GObjet=')+len('GObjet='):GObjet.index('&IdObjet')] # Extracting the GObjet ID for the next requests
            s.get('https://esaip.alcuin.com/OpDotNet/site/Scripts/plugins/RequireJS/require.js') #Necessary GET request for the following GET
            NomPrenom = s.get('https://esaip.alcuin.com/OpDotNet/Eplug/Annuaire/Navigation/Dossier/esaip_dossieretudiant.opx?GObjet='+GObjet+'&IdObjet='+str(IDeleve)+'&IdTypeObjet=26&intIdUtilisateur='+str(IDeleve)+'&IdOnglet=245&IdAnnDos=6449&1onglet=1').text # Get qui nous renvoie le post a réaliser (quand on clique sur l'onglet parcour)
            NomPrenom = BeautifulSoup(NomPrenom, "html.parser")
            try:
                for Nom in  NomPrenom.find('div',{'id' : 'NOM'}).find('div', attrs={"class":'form_fieldValue'}):
                    Nom = Nom.strip()
                for Prenom in  NomPrenom.find('div',{'id' : 'PRE'}).find('div', attrs={"class":'form_fieldValue'}):
                    Prenom = Prenom.strip()
                
                sql = 'INSERT INTO Noms (ID, Nom, prenom ) VALUES (%s, %s, %s)'
                val = (IDeleve, Nom, Prenom)
                cursor.execute(sql, val)
                mydb.commit()
            except:
                pass
        


def usage():
    print("Usage: main.py [-h] [-o output] days")
    
if __name__ == "__main__":
    main(sys.argv[1:])
mydb.close()






